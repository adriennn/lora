extends index

block scriptsandstyles
  script(src='https://rawgit.com/adriennn/jsqr/master/index.js')
  script(src='https://rawgit.com/webrtc/adapter/master/release/adapter.js')
  script(src='https://cdn.jsdelivr.net/npm/image-capture@0.3.4/lib/imagecapture.min.js')
  link(href='', rel='stylesheet')
    
  style(type="text/css").

    video, canvas, #photo {
      background: lightgray !important;
      height: 100px !important;
      width: 200px !important;
    }
    
block tabcontent
  p.h5 Scan the QR code on your device
    .row(class="justify-content-center align-items-center")
      form(class="align-items-center",action="/lora/demo",id="sendcode",method="POST")
        .form-group
          video(autoplay,class="form-control")
    .row(class="justify-content-center align-items-center")
      p(id="feedback", class="text-muted") Log
        
  script.
    
    var videoOutput = document.getElementsByTagName("video");
    var qrcode = new QrCode();
    var feedback = document.getElementById('feedback');
    var video = document.querySelector('video');
    var canvas;
    var track;
    
    qrcode.callback = function(err, result) {
    
      console.log(err);
      console.log(result);
                
      if (err) {
        
        console.log(err);
        feedback.innerHTML = err.toString();
                
        } else {    
        
        track.stop();
        document.getElementById("sendcode").submit(); 
            
      }
    }

    function takeSnapshot() {
    
      var img = document.querySelector('img') || document.createElement('img');
      var context;
      var width  = video.offsetWidth;
      var height = video.offsetHeight;

      canvas = canvas || document.createElement('canvas');
      canvas.width = width;
      canvas.height = height;

      context = canvas.getContext('2d');
      context.drawImage(video, 0, 0, width, height);

      qrcode.decode(canvas.toDataURL('image/png'));
    }

    if (navigator.mediaDevices) {
      
      var options = true;
      
      try{
        navigator.mediaDevices.enumerateDevices()
        .then(function(devices) {
          devices.forEach(function(device) {
          if (device.kind === 'videoinput') {
            if(device.label.toLowerCase().search("back") >-1)
            options={'deviceId': {'exact':device.deviceId}, 'facingMode':'environment'};
          }
          });
        });
      } catch(e) {
        console.log(e);
      }
      
        
      navigator.mediaDevices.getUserMedia({video: options})
        .then(function(stream) {
          video.srcObject = stream;
          
          track = stream.getTracks()[0];
          
          setInterval(takeSnapshot, 600);
        })
        .catch(function(error) {
          feedback.textContent = 'Could not access the camera. Error: ' + error.name;
        });
    }
  
